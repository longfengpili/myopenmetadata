# pgsql config
x-postgres-user: &postgres-user ${POSTGRES_USER:-postgres}
x-postgres-password: &postgres-password ${POSTGRES_PASSWORD:-password}

# openmetadata db
x-openmetadata-db: &openmetadata-db ${OPENMETADATA_DB:-openmetadata_db}
x-openmetadata-user: &openmetadata-user ${OPENMETADATA_USER:-openmetadata_user}
x-openmetadata-password: &openmetadata-password ${OPENMETADATA_PASSWORD:-openmetadata_password}

# airflow db
x-airflow-db: &airflow-db ${AIRFLOW_DB:-airflow_db}
x-airflow-user: &airflow-user ${AIRFLOW_USER:-airflow_user}
x-airflow-password: &airflow-password ${AIRFLOW_PASSWORD:-airflow_password}

# elasticsearch
x-xpack-security-enabled: &xpack-security-enabled ${XPACK_SECURITY_ENABLED:-false}
x-elastic-user: &elastic-user elastic
x-elastic-password: &elastic-password ${ELASTIC_PASSWORD:-elastic}

# airflow admin
x-airflow-admin-user: &airflow-admin-user ${AIRFLOW_ADMIN_USER:-admin}
x-airflow-admin-password: &airflow-admin-password ${AIRFLOW_ADMIN_PASSWORD:-admin}

services:
  postgresql:
    environment:
      POSTGRES_USER: *postgres-user
      POSTGRES_PASSWORD: *postgres-password
      OPENMETADATA_DB: *openmetadata-db
      OPENMETADATA_USER: *openmetadata-user
      OPENMETADATA_PASSWORD: *openmetadata-password
      AIRFLOW_DB: *airflow-db
      AIRFLOW_USER: *airflow-user
      AIRFLOW_PASSWORD: *airflow-password
    healthcheck:
      test: ["CMD-SHELL", "psql -U ${POSTGRES_USER} -tAc 'select 1' -d ${OPENMETADATA_DB}"]
      interval: 15s
      timeout: 10s
      retries: 10
    volumes:
      - db:/var/lib/postgresql/data
      - dbinit:/docker-entrypoint-initdb.d

  elasticsearch:
    environment:
      xpack.security.enabled: *xpack-security-enabled
      ELASTIC_PASSWORD: *elastic-password
    healthcheck:
      test: 
        - CMD-SHELL
        - |
          curl -s -u elastic:${ELASTIC_PASSWORD} http://localhost:9200/_cluster/health?pretty | \
          grep status | \
          grep -qE 'green|yellow' || exit 1
      interval: 15s
      timeout: 10s
      retries: 10

  execute-migrate-all:
    environment:
      # Database configuration for postgresql
      OM_DATABASE: *openmetadata-db
      DB_USER: *openmetadata-user
      DB_USER_PASSWORD: *openmetadata-password

      #airflow parameters
      AIRFLOW_USERNAME: *airflow-admin-user
      AIRFLOW_PASSWORD: *airflow-admin-password

      # elasticsearch
      ELASTICSEARCH_USER: *elastic-user
      ELASTICSEARCH_PASSWORD: *elastic-password

  openmetadata-server:
    environment:
      # Database configuration for postgresql
      OM_DATABASE: *openmetadata-db
      DB_USER: *openmetadata-user
      DB_USER_PASSWORD: *openmetadata-password
      
      #airflow parameters
      AIRFLOW_USERNAME: *airflow-admin-user
      AIRFLOW_PASSWORD: *airflow-admin-password

      # elasticsearch
      ELASTICSEARCH_USER: *elastic-user
      ELASTICSEARCH_PASSWORD: *elastic-password

  ingestion:
    environment:
      TZ: Asia/Shanghai
      # Database configuration for postgresql
      AIRFLOW_DB: *airflow-db
      DB_USER: *airflow-user
      DB_PASSWORD: *airflow-password

      # airflow parameters
      AIRFLOW_ADMIN_USER: *airflow-admin-user
      AIRFLOW_ADMIN_PASSWORD: *airflow-admin-password

    volumes:
      - ingestion-python-metadata:/home/airflow/.local/lib/python3.10/site-packages/metadata
      - ingestion-python-pydantic:/home/airflow/.local/lib/python3.10/site-packages/pydantic
      - ingestion-python-gunicorn:/home/airflow/.local/lib/python3.10/site-packages/gunicorn


volumes:
  ingestion-volume-dag-airflow:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./volumes/airflow/dag_generated_configs
  ingestion-volume-dags:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./volumes/airflow/dags
  ingestion-volume-tmp:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./volumes/tmp
  es-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./volumes/elasticsearch
  db:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./volumes/postgresql
  dbinit:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./docker/postgresql/docker-entrypoint-initdb.d
  ingestion-python-metadata:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./volumes/python/metadata
  ingestion-python-gunicorn:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./volumes/python/gunicorn
  ingestion-python-pydantic:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./volumes/python/pydantic

